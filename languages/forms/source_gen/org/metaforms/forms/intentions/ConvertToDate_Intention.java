package org.metaforms.forms.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class ConvertToDate_Intention extends BaseIntention implements Intention {
  public ConvertToDate_Intention() {
  }

  public String getConcept() {
    return "org.metaforms.forms.structure.TextField";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u0434\u0430\u0442\u0443";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode dateField = SNodeFactoryOperations.createNewNode("org.metaforms.forms.structure.DateField", null);
    SLinkOperations.setTarget(dateField, "fieldReference", SLinkOperations.getTarget(node, "fieldReference", true), true);
    SNodeOperations.insertNextSiblingChild(node, dateField);
    SNodeOperations.deleteNode(node);
    editorContext.select(dateField);
    editorContext.selectAndSetCaret(dateField, 1);
  }

  public String getLocationString() {
    return "org.metaforms.forms.intentions";
  }
}
