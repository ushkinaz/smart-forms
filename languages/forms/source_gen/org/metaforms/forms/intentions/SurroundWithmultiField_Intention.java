package org.metaforms.forms.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.SurroundWithIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class SurroundWithmultiField_Intention extends SurroundWithIntention implements Intention {
  public SurroundWithmultiField_Intention() {
  }

  public String getConcept() {
    return "org.metaforms.forms.structure.IFormComponent";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "\u0412\u043b\u043e\u0436\u0438\u0442\u044c \u0432 \u043c\u0443\u043b\u044c\u0442\u0438\u0444\u0438\u043b\u0434";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode multiField = SNodeFactoryOperations.createNewNode("org.metaforms.forms.structure.MultiField", null);
    List<SNode> selectedNodes = editorContext.getSelectedNodes();
    SNodeOperations.insertNextSiblingChild(node, multiField);
    for (SNode selectedNode : ListSequence.fromList(selectedNodes)) {
      ListSequence.fromList(SLinkOperations.getTargets(multiField, "children", true)).addElement(SNodeOperations.getAncestor(selectedNode, "org.metaforms.forms.structure.HasLabel", true, false));
    }
    editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(multiField, "children", true)).last());
  }

  public String getLocationString() {
    return "org.metaforms.forms.intentions";
  }
}
