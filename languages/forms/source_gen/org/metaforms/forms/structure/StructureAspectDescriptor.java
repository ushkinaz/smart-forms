package org.metaforms.forms.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"org.metaforms.forms.structure.CheckBoxGroup", "org.metaforms.forms.structure.CheckBoxItem", "org.metaforms.forms.structure.ContentPanel", "org.metaforms.forms.structure.DateField", "org.metaforms.forms.structure.Form", "org.metaforms.forms.structure.FormContainer", "org.metaforms.forms.structure.FormPanel", "org.metaforms.forms.structure.HasBinding", "org.metaforms.forms.structure.HasChildren", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.HasOrientation", "org.metaforms.forms.structure.HasQuery", "org.metaforms.forms.structure.HasValue", "org.metaforms.forms.structure.HasWidth", "org.metaforms.forms.structure.IFormComponent", "org.metaforms.forms.structure.LabelField", "org.metaforms.forms.structure.MultiField", "org.metaforms.forms.structure.RadioGroup", "org.metaforms.forms.structure.Rule", "org.metaforms.forms.structure.TabItem", "org.metaforms.forms.structure.TabPanel", "org.metaforms.forms.structure.TablePanel", "org.metaforms.forms.structure.TextField", "org.metaforms.forms.structure.TriggerField"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.CheckBoxGroup", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasBinding", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.CheckBoxItem", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.HasValue"}, new String[]{}, new String[]{});
      case 2:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.ContentPanel", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasChildren", "org.metaforms.forms.structure.FormContainer", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      case 3:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.DateField", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasBinding", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.HasWidth", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      case 4:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.Form", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "org.metaforms.domain.structure.HasDocumentReference", "org.metaforms.domain.structure.HasId", "jetbrains.mps.lang.core.structure.IContainer"}, new String[]{}, new String[]{});
      case 5:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.FormContainer", null, true, new String[]{}, new String[]{}, new String[]{});
      case 6:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.FormPanel", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasChildren", "org.metaforms.forms.structure.FormContainer", "org.metaforms.forms.structure.IFormComponent"}, new String[]{"frame"}, new String[]{});
      case 7:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.HasBinding", null, true, new String[]{}, new String[]{}, new String[]{});
      case 8:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.HasChildren", null, true, new String[]{}, new String[]{}, new String[]{});
      case 9:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.HasLabel", null, true, new String[]{}, new String[]{"fieldLabel"}, new String[]{});
      case 10:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.HasOrientation", null, true, new String[]{}, new String[]{"orientation"}, new String[]{});
      case 11:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.HasQuery", null, true, new String[]{}, new String[]{"query"}, new String[]{});
      case 12:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.HasValue", null, true, new String[]{}, new String[]{"value"}, new String[]{});
      case 13:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.HasWidth", null, true, new String[]{}, new String[]{"width"}, new String[]{});
      case 14:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.IFormComponent", null, true, new String[]{"org.metaforms.domain.structure.HasId"}, new String[]{"group"}, new String[]{});
      case 15:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.LabelField", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.IFormComponent", "org.metaforms.forms.structure.HasBinding", "org.metaforms.forms.structure.HasLabel"}, new String[]{}, new String[]{});
      case 16:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.MultiField", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasOrientation", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      case 17:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.RadioGroup", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasBinding", "org.metaforms.forms.structure.HasQuery", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      case 18:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.Rule", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 19:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.TabItem", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasChildren", "org.metaforms.forms.structure.HasLabel"}, new String[]{}, new String[]{});
      case 20:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.TabPanel", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      case 21:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.TablePanel", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasChildren", "org.metaforms.forms.structure.FormContainer", "org.metaforms.forms.structure.IFormComponent"}, new String[]{"columns"}, new String[]{});
      case 22:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.TextField", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasBinding", "org.metaforms.forms.structure.HasWidth", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.HasValue", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      case 23:
        return new CompiledConceptDescriptor("org.metaforms.forms.structure.TriggerField", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "org.metaforms.forms.structure.HasBinding", "org.metaforms.forms.structure.HasWidth", "org.metaforms.forms.structure.HasQuery", "org.metaforms.forms.structure.HasLabel", "org.metaforms.forms.structure.IFormComponent"}, new String[]{}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
